Инструкция по использованию программы, интегрирующей задачу N тел.

Исходник: LabPrac.cpp
Запуск: ./LP

Входные данные:
file_initial.dat
Содержит начальные данные(координаты и скорости всех тел в начальный момент времени).
В каждой строчке первые три значения координаты, вторые скорости. Порядок указания начальных данных тел должен быть таким же, как порядок указания масс в файле file_mass.dat
file_mass.dat
Содержит массы тел.
file_size.dat
Содержит время конца интервала интегрирования, число шагов, число тел, размерность задачи умноженную на 2,число бит в точности типа mpf_class, расстояние на котором считается, что тела столкнулись(если 0, то условие столкновения игнорируется) ровно в таком порядке.

Выходные данные:
res.dat
По блокам в каждый момент времени выводится положения и скорости тел в том же порядке, что и для начального момента времени в файле file_initial.dat

Размерность данных по умолчанию:
Массы Солнца, астрономические единицы, года.
G=4*pi^2.
Возможные ключи:
-b Число бит в точности типа mpf_class.
-G Изменить значение гравитационной постоянной(если в вашей задаче другая размерность).
-N Число шагов(при использовании контроля шага, шаг не станет больше изначального значения t/N).
-M Число тел(можно указывать только в случае, если начальные данные в файлах file_initial.dat и file_mass содержат достаточное количество тел).
-t Конечный момент времени.
-p Условие на уменьшение шага abs((E(t)-E(t+h))/E(t)) > presicion_energy. По умолчанию это просто 0(т.е. с точностью заданного типа), с помощью этого ключа значение можно поменять.
-d Размерность задачи, умноженная на 2.
-e Расстояние на котором считается, что тела столкнулись.
--integrator Выбор интегратора("RK4","RK5","LP").
--without_controlled_step Убирает условие на контроль шага.

ОСОБОЕ ВНИМАНИЕ.
-b нужно включать самым первым(по крайней мере до -t и -e), т.к. в противном случае точность задания -t и -e будет 64 бита.
Контроль шага требует изменение значения precision_energy вручную, значения по умолчанию в большинстве случаев прибодит к очень маленькому шагу.

Примеры:
Задача Лидова-Кодзаи для Луны, Земли и Солнца(угол между эклиптикой и орбитой Луны 90 градусов).
Kozai.gif и Kozai.dat
./LP --integrator="RK5" -p 1.0e-19 -t 6.0 -N 6000
Условие на столкновение distance_encounter=0.000054(а.е.).
Результаты:
Столкновение произошло через 4.91 года, интегрировалось примерно 127 тысяч шагов.
В файле Kozai.dat выведены данные до момента столкновения(после интегрирование было прервано).
Kozai.gif нарисована с помощью скрипта gnuplot из файла Kozai.dat через каждые 500 шагов.
8.gif проитегрирована восьмёрка с шагом 1.0е-3, G=1, точностью 192 бита, на интервале времени в 6 лет.
